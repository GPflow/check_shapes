:py:mod:`check_shapes.decorator`
================================

.. py:module:: check_shapes.decorator

.. autoapi-nested-parse::

   Decorator for checking the shapes of function using tf Tensors.



Module Contents
---------------

.. py:function:: null_check_shapes(func)

   Annotates the given function so that it looks like it has shape checks, but without actually
   checking anything.

   This is necessary not to break ``@inherit_check_shapes`` when shape checking is disabled.


.. py:function:: check_shapes(*specs, tf_decorator = False)

   Decorator that checks the shapes of tensor arguments.

   Example:

   .. literalinclude:: /examples/test_check_shapes_examples.py
      :start-after: [basic]
      :end-before: [basic]
      :dedent:

   :param specs: Specification of arguments to check. See: "Check specification" in our User Guide.
   :param tf_decorator: Whether to wrap the shape check with
       ``tf.compat.v1.flags.tf_decorator.make_decorator``.
       Setting this `True` seems to solve some problems, particularly related to Keras models,
       but create some other problems, particularly related to branching on tensors.


